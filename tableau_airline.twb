<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='airline_data (airline_data)' inline='true' name='federated.131k7jx1k6ly3y192cbb807f7upi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airline_data' name='excel-direct.1hc48lm17a91x90zue5ug1j5a4k5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/cnguy/OneDrive/Desktop/Files/airline_data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1hc48lm17a91x90zue5ug1j5a4k5' name='airline_data' table='[airline_data$]' type='table'>
          <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='6'>
            <column datatype='date' name='Flight Date' ordinal='0' />
            <column datatype='string' name='Carrier' ordinal='1' />
            <column datatype='string' name='Origin Airport' ordinal='2' />
            <column datatype='string' name='Origin State' ordinal='3' />
            <column datatype='string' name='Destination Airport' ordinal='4' />
            <column datatype='string' name='Destination State' ordinal='5' />
            <column datatype='datetime' name='Departure Time' ordinal='6' />
            <column datatype='datetime' name='Arrival Time' ordinal='7' />
            <column datatype='integer' name='Distance' ordinal='8' />
            <column datatype='integer' name='Dep Delay 15' ordinal='9' />
            <column datatype='integer' name='Departure Delay' ordinal='10' />
            <column datatype='integer' name='Carrier Delay' ordinal='11' />
            <column datatype='integer' name='Weather Delay' ordinal='12' />
            <column datatype='integer' name='NAS Delay' ordinal='13' />
            <column datatype='integer' name='Security Delay' ordinal='14' />
            <column datatype='integer' name='Late Aircraft Delay' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Flight Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Flight Date]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Flight Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin Airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin Airport]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Origin Airport</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Origin State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination Airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Destination Airport]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Destination Airport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Destination State]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Destination State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Departure Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Departure Time]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Departure Time</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Arrival Time]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Arrival Time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dep Delay 15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dep Delay 15]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Dep Delay 15</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Departure Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Departure Delay]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Departure Delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Carrier Delay]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Carrier Delay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weather Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weather Delay]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Weather Delay</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAS Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NAS Delay]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>NAS Delay</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Security Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Security Delay]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Security Delay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Late Aircraft Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Late Aircraft Delay]</local-name>
            <parent-name>[airline_data]</parent-name>
            <remote-alias>Late Aircraft Delay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airline_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P10001:no:A1:P10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Carrier Delay:qk]&quot;' value='Carrier' />
          <alias key='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Late Aircraft Delay:qk]&quot;' value='Late Aircraft' />
          <alias key='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:NAS Delay:qk]&quot;' value='NAS' />
          <alias key='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Security Delay:qk]&quot;' value='Security' />
          <alias key='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Weather Delay:qk]&quot;' value='Weather' />
        </aliases>
      </column>
      <column datatype='integer' name='[Carrier Delay]' role='measure' type='quantitative' />
      <column datatype='string' name='[Destination State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Late Aircraft Delay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[NAS Delay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Security Delay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Weather Delay]' role='measure' type='quantitative' />
      <column-instance column='[Carrier Delay]' derivation='Avg' name='[avg:Carrier Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Late Aircraft Delay]' derivation='Avg' name='[avg:Late Aircraft Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NAS Delay]' derivation='Avg' name='[avg:NAS Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Security Delay]' derivation='Avg' name='[avg:Security Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weather Delay]' derivation='Avg' name='[avg:Weather Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carrier Delay]' derivation='Sum' name='[sum:Carrier Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Late Aircraft Delay]' derivation='Sum' name='[sum:Late Aircraft Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NAS Delay]' derivation='Sum' name='[sum:NAS Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Security Delay]' derivation='Sum' name='[sum:Security Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weather Delay]' derivation='Sum' name='[sum:Weather Delay:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.43361' measure-ordering='alphabetic' measure-percentage='0.56639' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Carrier Delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Carrier Delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Weather Delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Weather Delay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Security Delay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Security Delay:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:NAS Delay:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:NAS Delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Late Aircraft Delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Late Aircraft Delay:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Q1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What airlines have the most flight delays?&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline_data (airline_data)' name='federated.131k7jx1k6ly3y192cbb807f7upi' />
          </datasources>
          <datasource-dependencies datasource='federated.131k7jx1k6ly3y192cbb807f7upi'>
            <column caption='SUM([Dep Delay 15])*100/COUNT([Carrier])' datatype='real' name='[Calculation_969118372066664448]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM([Dep Delay 15])*100/COUNT([Carrier])' />
            </column>
            <column datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Dep Delay 15]' role='measure' type='quantitative' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_969118372066664448]' derivation='User' name='[usr:Calculation_969118372066664448:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.131k7jx1k6ly3y192cbb807f7upi].[none:Carrier:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.131k7jx1k6ly3y192cbb807f7upi].[usr:Calculation_969118372066664448:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.131k7jx1k6ly3y192cbb807f7upi].[usr:Calculation_969118372066664448:qk]' scope='rows' value='Percentage of flight delays' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#3b5c7f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.131k7jx1k6ly3y192cbb807f7upi].[usr:Calculation_969118372066664448:qk]</rows>
        <cols>[federated.131k7jx1k6ly3y192cbb807f7upi].[none:Carrier:nk]</cols>
      </table>
      <simple-id uuid='{AE656F11-CC01-4833-8776-15E0322DFAFB}' />
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What states have the most flight delays?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline_data (airline_data)' name='federated.131k7jx1k6ly3y192cbb807f7upi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.131k7jx1k6ly3y192cbb807f7upi'>
            <column caption='SUM([Dep Delay 15])*100/COUNT([Origin State])' datatype='real' name='[Calculation_969118372067229697]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='SUM([Dep Delay 15])*100/COUNT([Origin State])' />
            </column>
            <column datatype='integer' name='[Dep Delay 15]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_969118372067229697]' derivation='User' name='[usr:Calculation_969118372067229697:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.131k7jx1k6ly3y192cbb807f7upi].[Longitude (generated)]' field-type='quantitative' max='32942017.762162775' min='26018449.603210282' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.131k7jx1k6ly3y192cbb807f7upi].[Latitude (generated)]' field-type='quantitative' max='6804194.9561198559' min='2808843.6827437147' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.131k7jx1k6ly3y192cbb807f7upi].[usr:Calculation_969118372067229697:qk]' num-steps='30' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.131k7jx1k6ly3y192cbb807f7upi].[usr:Calculation_969118372067229697:qk]' />
              <lod column='[federated.131k7jx1k6ly3y192cbb807f7upi].[none:Origin State:nk]' />
              <geometry column='[federated.131k7jx1k6ly3y192cbb807f7upi].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.131k7jx1k6ly3y192cbb807f7upi].[Latitude (generated)]</rows>
        <cols>[federated.131k7jx1k6ly3y192cbb807f7upi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A5F13680-82D7-40F8-8C8D-942179B1131F}' />
    </worksheet>
    <worksheet name='Q3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What days of the month have the most flight delays?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline_data (airline_data)' name='federated.131k7jx1k6ly3y192cbb807f7upi' />
          </datasources>
          <datasource-dependencies datasource='federated.131k7jx1k6ly3y192cbb807f7upi'>
            <column datatype='integer' name='[Dep Delay 15]' role='measure' type='quantitative' />
            <column datatype='date' name='[Flight Date]' role='dimension' type='ordinal' />
            <column-instance column='[Flight Date]' derivation='Day' name='[dy:Flight Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Dep Delay 15]' derivation='Sum' name='[sum:Dep Delay 15:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Dep Delay 15:qk]' scope='rows' value='Number of flight delays' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Dep Delay 15:qk]</rows>
        <cols>[federated.131k7jx1k6ly3y192cbb807f7upi].[dy:Flight Date:ok]</cols>
      </table>
      <simple-id uuid='{F8FE6EEC-7F1C-44F9-8214-49A36A16B1B5}' />
    </worksheet>
    <worksheet name='Q4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What days of the week have the most flight delays?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline_data (airline_data)' name='federated.131k7jx1k6ly3y192cbb807f7upi' />
          </datasources>
          <datasource-dependencies datasource='federated.131k7jx1k6ly3y192cbb807f7upi'>
            <column datatype='integer' name='[Dep Delay 15]' role='measure' type='quantitative' />
            <column datatype='date' name='[Flight Date]' role='dimension' type='ordinal' />
            <column-instance column='[Dep Delay 15]' derivation='Sum' name='[sum:Dep Delay 15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Flight Date]' derivation='Weekday' name='[wd:Flight Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Dep Delay 15:qk]' scope='rows' value='Number of flight delays' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Dep Delay 15:qk]</rows>
        <cols>[federated.131k7jx1k6ly3y192cbb807f7upi].[wd:Flight Date:ok]</cols>
      </table>
      <simple-id uuid='{ECE272C7-7B94-4734-9132-38583D38B314}' />
    </worksheet>
    <worksheet name='Q5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What time have the most flight delays?&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline_data (airline_data)' name='federated.131k7jx1k6ly3y192cbb807f7upi' />
          </datasources>
          <datasource-dependencies datasource='federated.131k7jx1k6ly3y192cbb807f7upi'>
            <column datatype='integer' name='[Dep Delay 15]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Departure Time]' role='dimension' type='ordinal' />
            <column-instance column='[Dep Delay 15]' derivation='Sum' name='[sum:Dep Delay 15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Departure Time]' derivation='Hour-Trunc' name='[thr:Departure Time:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Dep Delay 15:qk]' scope='rows' value='Number of flight delays' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Dep Delay 15:qk]</rows>
        <cols>[federated.131k7jx1k6ly3y192cbb807f7upi].[thr:Departure Time:qk]</cols>
      </table>
      <simple-id uuid='{C495AB1B-D43C-4E52-9CF1-A3D262F0D6C4}' />
    </worksheet>
    <worksheet name='Q7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Type of causes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline_data (airline_data)' name='federated.131k7jx1k6ly3y192cbb807f7upi' />
          </datasources>
          <datasource-dependencies datasource='federated.131k7jx1k6ly3y192cbb807f7upi'>
            <column datatype='integer' name='[Carrier Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Late Aircraft Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[NAS Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Security Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Weather Delay]' role='measure' type='quantitative' />
            <column-instance column='[Carrier Delay]' derivation='Avg' name='[avg:Carrier Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Late Aircraft Delay]' derivation='Avg' name='[avg:Late Aircraft Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NAS Delay]' derivation='Avg' name='[avg:NAS Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Security Delay]' derivation='Avg' name='[avg:Security Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay]' derivation='Avg' name='[avg:Weather Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Security Delay]' derivation='Sum' name='[sum:Security Delay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Late Aircraft Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Carrier Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:NAS Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Weather Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Security Delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Late Aircraft Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Carrier Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:NAS Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Weather Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Security Delay:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.131k7jx1k6ly3y192cbb807f7upi].[Multiple Values]' scope='rows' value='Average Delays in Minutes' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.131k7jx1k6ly3y192cbb807f7upi].[Multiple Values]</rows>
        <cols>[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9163DCE8-2C58-4C5F-B143-BF3BB653886C}' />
    </worksheet>
    <worksheet name='Q8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 airports with the most delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline_data (airline_data)' name='federated.131k7jx1k6ly3y192cbb807f7upi' />
          </datasources>
          <datasource-dependencies datasource='federated.131k7jx1k6ly3y192cbb807f7upi'>
            <column datatype='integer' name='[Carrier Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Dep Delay 15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Late Aircraft Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[NAS Delay]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin Airport]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Security Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Weather Delay]' role='measure' type='quantitative' />
            <column-instance column='[Security Delay]' derivation='Avg' name='[avg:Security Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin Airport]' derivation='None' name='[none:Origin Airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Carrier Delay]' derivation='Sum' name='[sum:Carrier Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Late Aircraft Delay]' derivation='Sum' name='[sum:Late Aircraft Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NAS Delay]' derivation='Sum' name='[sum:NAS Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Security Delay]' derivation='Sum' name='[sum:Security Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay]' derivation='Sum' name='[sum:Weather Delay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Late Aircraft Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Carrier Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:NAS Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Weather Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Security Delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Late Aircraft Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Carrier Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:NAS Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[sum:Weather Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.131k7jx1k6ly3y192cbb807f7upi].[avg:Security Delay:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.131k7jx1k6ly3y192cbb807f7upi].[none:Origin Airport:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Dep Delay 15])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Origin Airport:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.131k7jx1k6ly3y192cbb807f7upi].[none:Origin Airport:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ORD&quot;</bucket>
              <bucket>&quot;DFW&quot;</bucket>
              <bucket>&quot;BOS&quot;</bucket>
              <bucket>&quot;EWR&quot;</bucket>
              <bucket>&quot;SFO&quot;</bucket>
              <bucket>&quot;DEN&quot;</bucket>
              <bucket>&quot;ATL&quot;</bucket>
              <bucket>&quot;LAX&quot;</bucket>
              <bucket>&quot;CLT&quot;</bucket>
              <bucket>&quot;PHX&quot;</bucket>
              <bucket>&quot;IAH&quot;</bucket>
              <bucket>&quot;DTW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]</column>
            <column>[federated.131k7jx1k6ly3y192cbb807f7upi].[none:Origin Airport:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.131k7jx1k6ly3y192cbb807f7upi].[Multiple Values]' scope='rows' value='Total Delays in Minutes' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.131k7jx1k6ly3y192cbb807f7upi].[Multiple Values]</rows>
        <cols>[federated.131k7jx1k6ly3y192cbb807f7upi].[none:Origin Airport:nk]</cols>
      </table>
      <simple-id uuid='{AEE35F84-CA81-4906-8FCB-CE4B9AE1F1A1}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.131k7jx1k6ly3y192cbb807f7upi].[none:Carrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C11D9F4F-3A35-4A7A-8502-F087B40B700A}' />
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.131k7jx1k6ly3y192cbb807f7upi].[usr:Calculation_969118372067229697:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.131k7jx1k6ly3y192cbb807f7upi].[usr:Calculation_969118372067229697:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3001CB42-DA77-48DE-9923-82BFFEC2BEDC}' />
    </window>
    <window class='worksheet' maximized='true' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.131k7jx1k6ly3y192cbb807f7upi].[yr:Flight Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5871EE0B-E6DE-48D3-A21D-F779B3E2A948}' />
    </window>
    <window class='worksheet' name='Q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.131k7jx1k6ly3y192cbb807f7upi].[yr:Flight Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B8DC4CB-FCE3-4DD4-A628-785CEFDD57D5}' />
    </window>
    <window class='worksheet' name='Q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.131k7jx1k6ly3y192cbb807f7upi].[yr:Departure Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4502E1F-1727-4829-B7AC-E023298E62A2}' />
    </window>
    <window class='worksheet' name='Q7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1147D11F-9FEA-4857-BF8C-3900BBD2AB6B}' />
    </window>
    <window class='worksheet' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.131k7jx1k6ly3y192cbb807f7upi].[:Measure Names]</field>
            <field>[federated.131k7jx1k6ly3y192cbb807f7upi].[none:Origin Airport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C265D4F-8FD8-4DFF-9ED9-AC6C017CD7E6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3' width='192'>
      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
      a738fzOv8RbCAuO7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
